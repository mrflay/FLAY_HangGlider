class Rotation
{
	type = "rotation";
	memory = 1;
	minValue = 0;
	maxValue = 1;
	angle0 = 0;
	angle1 = 1;
};

class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Vehicle : Default {};
	class FLAY_HangGliderSkeleton : Vehicle 
	{
		skeletonBones[]=
		{
			"glider","",
				"pilot_lefthand","glider",
				"pilot_righthand","glider",
				"pilot_leftfoot","glider",
				"pilot_rightfoot","glider",
			"landing_gear","",
			"harness_anchor","",
			"harness","",
				"harness_straps","harness",
				"pilot_pos","harness",
					"pilot","pilot_pos",
						"swoop","pilot",
						"swoophack","pilot"
		};
	};
	class FLAY_ThermalSkeleton : Vehicle 
	{
		skeletonBones[]=
		{
			"arrow","",
				"arrow_red_start","arrow",
					"arrow_red_end","arrow_red_start",
				"arrow_blue_start","arrow",
					"arrow_blue_end","arrow_blue_start"
		};
	};
	class FLAY_3DAxis10mSkeleton : Vehicle 
	{
		skeletonBones[]=
		{
			"xyz",""
		};
	};
};

class CfgModels
{
	class Default
	{
		sectionsInherit="";
		sections[] = {};
		skeletonName = "";
	};
	class FLAY_HangGlider: Default
	{
		sections[] = {};
		skeletonName = "FLAY_HangGliderSkeleton";
		class Animations
		{
			class GliderPitch
			{
				type = "rotation";
				source = "user";
				selection = "glider";
				axis = "harness_bank_axis";
				memory = 1;
				sourceAddress = "clamp";
				minValue = "-90";
				maxValue = "+90";
				angle0 = "rad -90";
				angle1 = "rad +90";
				minPhase = "-90";
				maxPhase = "+90";
				animPeriod = 0.05;
				initPhase = 0;
			};		
			class HarnessStrapsHide
			{
				type = "hide";
				source = "user";
				selection = "harness_straps";
				sourceAddress = "clamp";
				minValue = "0";
				maxValue = "1";
				hideValue = "1";
				animPeriod = 0.00000001;
			};
			class HarnessAnchorHide
			{
				type = "hide";
				source = "user";
				selection = "harness_anchor";
				sourceAddress = "clamp";
				minValue = "0";
				maxValue = "1";
				hideValue = "1";
				animPeriod = 0.00000001;
			};			
			class HarnessPitch
			{
				type = "rotation";
				source = "horizonDive";
				selection = "harness";
				axis = "harness_bank_axis";
				memory = 0;
				sourceAddress = "clamp";
				minValue = "rad -45"; // 45
				maxValue = "rad +45"; // 45
				angle0 = "rad +15"; //15
				angle1 = "rad -15";
				minPhase = "rad +15";
				maxPhase = "rad -15";
				animPeriod = 0;
			};
			class HarnessBank
			{
				type = "rotation";
				source = "horizonBank";
				selection = "harness";
				axis = "harness_pitch_axis";
				memory = 0;
				sourceAddress = "clamp";
				minValue = "rad -45";
				maxValue = "rad +45";
				angle0 = "rad +15";
				angle1 = "rad -15";
				minPhase = "rad +15";
				maxPhase = "rad -15";
				animPeriod = 0;
			};
			class PilotPitch
			{
				type = "rotation";
				source = "horizonDive";
				selection = "pilot";
				axis = "axis_pilot_x";
				memory = 1;
				sourceAddress = "clamp";
				minValue = "rad -90"; // 90
				maxValue = "rad +90"; // 90
				angle0 = "rad +15"; //25
				angle1 = "rad -15";
				minPhase = "rad +15";
				maxPhase = "rad -15";
				animPeriod = 0;
			};
			class PilotBank
			{
				type = "rotation";
				source = "horizonBank";
				selection = "pilot";
				axis = "axis_pilot_z";
				memory = 1;
				sourceAddress = "clamp";
				minValue = "rad -90";
				maxValue = "rad +90";
				angle0 = "rad +25";
				angle1 = "rad -25";
				minPhase = "rad +25";
				maxPhase = "rad -25";
				animPeriod = 0;
			};			
			class PilotYaw
			{
				type = "rotationY";
				source = "horizonBank";
				selection = "pilot";
				axis = "axis_pilot_y";
				memory = 1;
				sourceAddress = "clamp";
				minValue = "rad -45";
				maxValue = "rad +45";
				angle0 = "rad -25";
				angle1 = "rad +25";
				minPhase = "rad -25";
				maxPhase = "rad +25";
				animPeriod = 0;
			};
			// Adjust the horizontal position of the pilot.
			class PilotPosX
			{
				type="translation";
				source="user";
				selection="pilot_pos";
				axis="axis_pilot_x";
				memory=1;
				initPhase=0;
				sourceAddress="clamp";
				minValue=-1;
				maxValue=1;
				offset0=-1;
				offset1=1;
			};			
			// Adjust the vertical position of the pilot.
			class PilotPosY
			{
				type="translation";
				source="user";
				selection="pilot_pos";
				axis="axis_pilot_y";
				memory=1;
				initPhase=0;
				sourceAddress="clamp";
				minValue=-1;
				maxValue=1;
				offset0=-1;
				offset1=1;
			};
			// Adjust the forward position of the pilot.
			class PilotPosZ
			{
				type="translation";
				source="user";
				selection="pilot_pos";
				axis="axis_pilot_z";
				memory=1;
				initPhase=0;
				sourceAddress="clamp";
				minValue=-1;
				maxValue=1;
				offset0=-1;
				offset1=1;
			};		
            class LandingGear {
				type="translation";
				source="user";
				selection="landing_gear";
				axis="axis_pilot_y";
				memory=1;
				initPhase=0;
				sourceAddress="clamp";
				minValue=-1;
				maxValue=1;
				offset0=0.858;
				offset1=-0.858;
				animPeriod = 0.1;
            };
			class HelperHide {
				type = "hide";
				source = "user";
				selection = "helper";
				sourceAddress = "clamp";
				minValue = "0";
				maxValue = "1";
				hideValue = "1";
				animPeriod = 0.0000001;			
			};
			class FireGeoPilotHide {
				type = "hide";
				source = "user";
				selection = "swoophack";
				sourceAddress = "clamp";
				minValue = "0";
				maxValue = "1";
				hideValue = "1";
				animPeriod = 0.0000001;	
			};
		};
	};
	
	class FLAY_HangGlider2: FLAY_HangGlider {};
	
	class FLAY_Thermal: Default
	{
		sections[] = {};
		skeletonName = "FLAY_ThermalSkeleton";
		class Animations
		{
			class SizeArrowRed
			{
				type = "translationY";
				source = "user";
				selection = "arrow_red_end";
				sourceAddress = "clamp";
				minValue=0;
				maxValue=500;
				offset0=0;
				offset1=500;
				animPeriod = 0;
			};
			class SizeArrowBlue
			{
				type = "translation";
				source = "user";
				selection = "arrow_blue_end";
				sourceAddress = "clamp";
				memory=1;
				axis="axis_y";
				minValue=0;
				maxValue=500;
				offset0=0;
				offset1=-500;
				animPeriod = 0;
			};			
			class HideArrow
			{
				type = "hide";
				source = "user";
				selection = "arrow";
				sourceAddress = "clamp";
				minValue = "0";
				maxValue = "1";
				hideValue = "0.5";
				animPeriod = 0.0000001;				
			};
			class HideArrowRed
			{
				type = "hide";
				source = "user";
				selection = "arrow_red_start";
				sourceAddress = "clamp";
				minValue = "0";
				maxValue = "1";
				hideValue = "0.5";
				animPeriod = 0.0000001;				
			};
			class HideArrowBlue
			{
				type = "hide";
				source = "user";
				selection = "arrow_blue_start";
				sourceAddress = "clamp";
				minValue = "0";
				maxValue = "1";
				hideValue = "0.5";
				animPeriod = 0.0000001;				
			};
		};
	};
	
	class FLAY_3DAxis10m: Default
	{
		sections[] = {};
		skeletonName = "FLAY_3DAxis10mSkeleton";
		class Animations
		{
			class RX
			{
				type = "rotation";
				source = "user";
				selection = "xyz";
				axis = "axis_x";
				memory = 1;
				sourceAddress = "loop";
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad -360";
				angle1 = "rad +360";
				minPhase = "rad -360";
				maxPhase = "rad +360";
				animPeriod = 0;
			};
			class RY: RX
			{
				type = "rotation";
				source = "user";
				selection = "xyz";
				axis = "axis_y";
			};
			class RZ: RX
			{
				type = "rotation";
				source = "user";
				selection = "xyz";
				axis = "axis_z";
			};				
		};
	};	
};