class Rotation
{
	type = "rotation";
	memory = 1;
	minValue = 0;
	maxValue = 1;
	angle0 = 0;
	angle1 = 1;
};

class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Vehicle : Default {};
	class FLAY_HangGliderSkeleton : Vehicle 
	{
		skeletonBones[]=
		{
			"harness","",
			"straps","harness",
			"pilot_pos","harness",
			"pilot","pilot_pos",
			"legs","pilot",
			"feet","legs",
			"stabilizer","",
		};
	};
	class FLAY_ArrowDownHelperSkeleton : Vehicle 
	{
		skeletonBones[]=
		{
			"arrow",""
		};
	};	
};

class CfgModels
{
	class Default
	{
		sectionsInherit="";
		sections[] = {};
		skeletonName = "";
	};
	class FLAY_HangGlider: Default
	{
		sections[] = {};
		skeletonName = "FLAY_HangGliderSkeleton";
		class Animations
		{
			class HarnessHide
			{
				type = "hide";
				source = "user";
				selection = "straps";
				sourceAddress = "clamp";
				minValue = "0";
				maxValue = "1";
				hideValue = "1";
				animPeriod = 0.00000001;
			};		
			class HarnessPitch
			{
				type = "rotation";
				source = "horizonDive";
				selection = "harness";
				axis = "harness_bank_axis";
				memory = 0;
				sourceAddress = "clamp";
				minValue = "rad -45";
				maxValue = "rad +45";
				angle0 = "rad +45";
				angle1 = "rad -45";
				minPhase = "rad +45";
				maxPhase = "rad -45";
				animPeriod = 0;
			};
			class HarnessBank
			{
				type = "rotation";
				source = "horizonBank";
				selection = "harness";
				axis = "harness_pitch_axis";
				memory = 0;
				sourceAddress = "clamp";
				minValue = "rad -45";
				maxValue = "rad +45";
				angle0 = "rad +45";
				angle1 = "rad -45";
				minPhase = "rad +45";
				maxPhase = "rad -45";
				animPeriod = 0;
			};
			class PilotPitch
			{
				type = "rotation";
				source = "horizonDive";
				selection = "pilot";
				axis = "axis_pilot_x";
				memory = 1;
				sourceAddress = "clamp";
				minValue = "rad -90";
				maxValue = "rad +90";
				angle0 = "rad -25";
				angle1 = "rad +25";
				minPhase = "rad -25";
				maxPhase = "rad +25";
				animPeriod = 0;
			};
			class PilotBank
			{
				type = "rotation";
				source = "horizonBank";
				selection = "pilot";
				axis = "axis_pilot_z";
				memory = 1;
				sourceAddress = "clamp";
				minValue = "rad -45";
				maxValue = "rad +45";
				angle0 = "rad +25";
				angle1 = "rad -25";
				minPhase = "rad +25";
				maxPhase = "rad -25";
				animPeriod = 0;
			};			
			class PilotYaw
			{
				type = "rotationY";
				source = "horizonBank";
				selection = "pilot";
				axis = "axis_pilot_y";
				memory = 1;
				sourceAddress = "clamp";
				minValue = "rad -90";
				maxValue = "rad +90";
				angle0 = "rad -15";
				angle1 = "rad +15";
				minPhase = "rad -15";
				maxPhase = "rad +15";
				animPeriod = 0;
			};
			// Adjust the horizontal position of the pilot.
			class PilotPosX
			{
				type="translation";
				source="user";
				selection="pilot_pos";
				axis="axis_pilot_x";
				memory=1;
				initPhase=0;
				sourceAddress="clamp";
				minValue=-1;
				maxValue=1;
				offset0=-1;
				offset1=1;
			};			
			// Adjust the vertical position of the pilot.
			class PilotPosY
			{
				type="translation";
				source="user";
				selection="pilot_pos";
				axis="axis_pilot_y";
				memory=1;
				initPhase=0;
				sourceAddress="clamp";
				minValue=-1;
				maxValue=1;
				offset0=-1;
				offset1=1;
			};
			// Adjust the forward position of the pilot.
			class PilotPosZ
			{
				type="translation";
				source="user";
				selection="pilot_pos";
				axis="axis_pilot_z";
				memory=1;
				initPhase=0;
				sourceAddress="clamp";
				minValue=-1;
				maxValue=1;
				offset0=-1;
				offset1=1;
			};		
			class FeetRotation
			{
				type = "rotation";
				source = "user";
				selection = "feet";
				axis = "axis_feet";
				memory = 0;
				sourceAddress = "clamp";
				minValue = "rad -90";
				maxValue = "rad +90";
				angle0 = "rad -90";
				angle1 = "rad +90";
				minPhase = "rad -90";
				maxPhase = "rad +90";
				animPeriod = 0;
			};
            class FeetStabilizer {
				type="translation";
				source="user";
				selection="stabilizer";
				axis="axis_stabilizer";
				memory=1;
				initPhase=0;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				offset0=0;
				offset1=-0.858;
				animPeriod = 0.1;
            };
            class LegsDamper {
				type="translation";
				source="user";
				selection="legs";
				axis="axis_stabilizer";
				memory=1;
				initPhase=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				offset0=0;
				offset1=1;
				animPeriod=0;
            };
            class FeetDamper {
				type="translation";
				source="altRadar";
				selection="feet";
				axis="axis_damper";
				memory=1;
				initPhase=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				offset0=0;
				offset1=-1;
            };
			class HelperHide {
				type = "hide";
				source = "user";
				selection = "helper";
				sourceAddress = "clamp";
				minValue = "0";
				maxValue = "1";
				hideValue = "1";
				animPeriod = 0.0000001;			
			};
		};
	};
	
	class FLAY_ArrowDownHelper: Default
	{
		sections[] = {};
		skeletonName = "FLAY_ArrowDownHelperSkeleton";
		class Animations
		{
			class RotY
			{
				type = "rotation";
				source = "user";
				selection = "arrow";
				axis = "axis";
				memory = 1;
				sourceAddress = "loop";
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad -360";
				angle1 = "rad +360";
				minPhase = "rad -360";
				maxPhase = "rad +360";
				animPeriod = 5;

			};
		};
	};
};